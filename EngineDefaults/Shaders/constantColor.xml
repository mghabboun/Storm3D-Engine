<Shader name="constantColor">
<VertexShader>
#version 330

uniform mat4 viewMatrix, projMatrix;

in vec3 Position;
in vec3 Normal;
 
//smooth out vec3 varyingNormal;
smooth out vec2 varyingTexCoord1;

 
void main()
{	
	//varyingTexCoord1 = TexCoord1;
	//varyingNormal = normalMatrix * Normal;
	vec4 posInEye = viewMatrix * vec4(Position,1);
    gl_Position = projMatrix * viewMatrix * vec4(Position,1);
}
</VertexShader>

<FragmentShader>
#version 330

out vec4 outputF;

//uniform vec3 baseColor;
//uniform sampler2D colorMap;

smooth in vec3 varyingNormal;
//smooth in vec2 varyingTexCoord1;

//smooth in vec3 outlightDir;

void main(void)
{
	// Dot product gives us diffuse intensity
	outputF =  vec4(1,0,0,0);
	//outputF *= texture(colorMap , varyingTexCoord1);
}
</FragmentShader>
</Shader>
